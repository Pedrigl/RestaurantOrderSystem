{
	"info": {
		"_postman_id": "b5cdae51-bee7-4a2b-9448-f37dfdedc67f",
		"name": "RestaurantOrderSystem",
		"description": "RDI Knowledge test for Junior .Net Developer role.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "22562424"
	},
	"item": [
		{
			"name": "Api",
			"item": [
				{
					"name": "Login",
					"item": [
						{
							"name": "login",
							"item": [
								{
									"name": "/api/Login/login",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Login/login?username=<string>&password=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Login",
												"login"
											],
											"query": [
												{
													"key": "username",
													"value": "<string>"
												},
												{
													"key": "password",
													"value": "<string>"
												}
											]
										},
										"description": "This endpoint makes an HTTP GET request to the specified URL to log in with the provided username and password as query parameters.\n\n### Request Parameters\n\n- `username` (string) - The username for logging in.\n- `password` (string) - The password for logging in.\n    \n\n### Response\n\nThe response will include the following fields:\n\n- `id` - The user's ID.\n- `displayName` - The user's display name.\n- `username` - The username of the logged-in user.\n- `password` - The password of the logged-in user (masked for security).\n- `jWtToken` - The JWT token for authentication.\n- `tokenExpiration` - The expiration time of the token.\n- `accessLevel` - The access level of the logged-in user."
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/Login/login?username=<string>&password=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Login",
														"login"
													],
													"query": [
														{
															"key": "username",
															"value": "<string>"
														},
														{
															"key": "password",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<integer>\",\n  \"displayName\": \"<string>\",\n  \"username\": \"<string>\",\n  \"password\": \"<string>\",\n  \"jWtToken\": \"<string>\",\n  \"tokenExpiration\": \"<dateTime>\",\n  \"accessLevel\": 0\n}"
										}
									]
								}
							],
							"description": "Performs user login"
						},
						{
							"name": "register",
							"item": [
								{
									"name": "/api/Login/register",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<integer>\",\n  \"displayName\": \"<string>\",\n  \"username\": \"<string>\",\n  \"password\": \"<string>\",\n  \"jWtToken\": \"<string>\",\n  \"tokenExpiration\": \"<dateTime>\",\n  \"accessLevel\": 0\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Login/register",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Login",
												"register"
											]
										},
										"description": "This endpoint allows users to register for a new account. The HTTP POST request should be sent to {{baseUrl}}/api/Login/register with the required payload in the raw request body.\n\n### Request Body\n\n- id (string)\n- displayName (string)\n- username (string)\n- password (string)\n- jWtToken (string)\n- tokenExpiration (string)\n- accessLevel (integer)\n    \n\n### Response\n\nThe response will contain the registered user's details including:\n\n- id (string)\n- displayName (string)\n- username (string)\n- password (string)\n- jWtToken (string)\n- tokenExpiration (string)\n- accessLevel (integer)"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"displayName\": \"<string>\",\n  \"username\": \"<string>\",\n  \"password\": \"<string>\",\n  \"jWtToken\": \"<string>\",\n  \"tokenExpiration\": \"<dateTime>\",\n  \"accessLevel\": 0\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/Login/register",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Login",
														"register"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<integer>\",\n  \"displayName\": \"<string>\",\n  \"username\": \"<string>\",\n  \"password\": \"<string>\",\n  \"jWtToken\": \"<string>\",\n  \"tokenExpiration\": \"<dateTime>\",\n  \"accessLevel\": 0\n}"
										}
									]
								}
							]
						},
						{
							"name": "update",
							"item": [
								{
									"name": "/api/Login/update",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<integer>\",\n  \"displayName\": \"<string>\",\n  \"username\": \"<string>\",\n  \"password\": \"<string>\",\n  \"jWtToken\": \"<string>\",\n  \"tokenExpiration\": \"<dateTime>\",\n  \"accessLevel\": 0\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Login/update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Login",
												"update"
											]
										},
										"description": "This endpoint allows updating user login information. The HTTP PUT request is made to {{baseUrl}}/api/Login/update.\n\n### Request Body\n\n- id (string): The ID of the user.\n- displayName (string): The display name of the user.\n- username (string): The username of the user.\n- password (string): The password of the user.\n- jWtToken (string): The JWT token of the user.\n- tokenExpiration (string): The expiration time of the token.\n- accessLevel (integer): The access level of the user.\n    \n\n### Response\n\nThe response returns the updated user login information including the ID, display name, username, password, JWT token, token expiration, and access level.\n\n#### Example Response\n\n```\n{\n    \"id\": \"\",\n    \"displayName\": \"\",\n    \"username\": \"\",\n    \"password\": \"\",\n    \"jWtToken\": \"\",\n    \"tokenExpiration\": \"\",\n    \"accessLevel\": 0\n}\n\n ```"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"displayName\": \"<string>\",\n  \"username\": \"<string>\",\n  \"password\": \"<string>\",\n  \"jWtToken\": \"<string>\",\n  \"tokenExpiration\": \"<dateTime>\",\n  \"accessLevel\": 0\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/Login/update",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Login",
														"update"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<integer>\",\n  \"displayName\": \"<string>\",\n  \"username\": \"<string>\",\n  \"password\": \"<string>\",\n  \"jWtToken\": \"<string>\",\n  \"tokenExpiration\": \"<dateTime>\",\n  \"accessLevel\": 0\n}"
										}
									]
								}
							]
						},
						{
							"name": "delete",
							"item": [
								{
									"name": "/api/Login/delete",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Login/delete?id=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Login",
												"delete"
											],
											"query": [
												{
													"key": "id",
													"value": "<integer>"
												}
											]
										},
										"description": "This endpoint is used to delete a user's login information by providing the user's ID as a query parameter in the URL. The HTTP DELETE request should be sent to {{baseUrl}}/api/Login/delete?id=. Upon successful deletion, the response will be null."
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Login/delete?id=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Login",
														"delete"
													],
													"query": [
														{
															"key": "id",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					],
					"description": "Manages user authentication and registration."
				},
				{
					"name": "Order",
					"item": [
						{
							"name": "All",
							"item": [
								{
									"name": "/api/Order/All",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Order/All",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Order",
												"All"
											]
										},
										"description": "This endpoint retrieves all orders from the server. The request is sent via an HTTP GET method to the specified URL. Upon successful execution, the server responds with a list of orders."
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Order/All",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Order",
														"All"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "GetById",
							"item": [
								{
									"name": "/api/Order/GetById",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Order/GetById?id=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Order",
												"GetById"
											],
											"query": [
												{
													"key": "id",
													"value": "<integer>"
												}
											]
										},
										"description": "This endpoint makes an HTTP GET request to retrieve an order by its ID. The ID of the order is passed as a query parameter in the URL. The response will contain the details of the order with the specified ID."
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Order/GetById?id=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Order",
														"GetById"
													],
													"query": [
														{
															"key": "id",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "GetByKitchenArea",
							"item": [
								{
									"name": "/api/Order/GetByKitchenArea",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Order/GetByKitchenArea?kitchenArea=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Order",
												"GetByKitchenArea"
											],
											"query": [
												{
													"key": "kitchenArea",
													"value": "0"
												}
											]
										},
										"description": "This endpoint makes an HTTP GET request to retrieve orders based on the specified kitchen area. The `kitchenArea` query parameter is used to filter the orders.\n\n### Response\n\nThe response for this request may include a list of orders associated with the specified kitchen area. In the provided examples, the response is null, indicating that no orders were found for the specified kitchen area."
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Order/GetByKitchenArea?kitchenArea=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Order",
														"GetByKitchenArea"
													],
													"query": [
														{
															"key": "kitchenArea",
															"value": "0"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Place",
							"item": [
								{
									"name": "/api/Order/Place",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<integer>\",\n  \"productId\": \"<integer>\",\n  \"orderDate\": \"<dateTime>\",\n  \"customerName\": \"<string>\",\n  \"orderType\": 2,\n  \"deliveryAddress\": {\n    \"street\": \"<string>\",\n    \"number\": \"<integer>\",\n    \"city\": \"<string>\",\n    \"state\": \"<string>\",\n    \"country\": \"<string>\",\n    \"zipCode\": \"<string>\"\n  },\n  \"isDone\": \"<boolean>\",\n  \"doneDate\": \"<dateTime>\",\n  \"isPaid\": \"<boolean>\",\n  \"paymentDate\": \"<dateTime>\",\n  \"isDelivered\": \"<boolean>\",\n  \"deliveryDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Order/Place",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Order",
												"Place"
											]
										},
										"description": "This endpoint allows you to place an order by sending an HTTP POST request to the specified URL. The request should include a payload in the raw request body type with the following parameters:\n\n- id (string)\n- productId (string)\n- orderDate (string)\n- customerName (string)\n- orderType (integer)\n- deliveryAddress (object) containing the following sub-parameters:\n    - street (string)\n    - number (string)\n    - city (string)\n    - state (string)\n    - country (string)\n    - zipCode (string)\n- isDone (string)\n- doneDate (string)\n- isPaid (string)\n- paymentDate (string)\n- isDelivered (string)\n- deliveryDate (string)"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"productId\": \"<integer>\",\n  \"orderDate\": \"<dateTime>\",\n  \"customerName\": \"<string>\",\n  \"orderType\": 2,\n  \"deliveryAddress\": {\n    \"street\": \"<string>\",\n    \"number\": \"<integer>\",\n    \"city\": \"<string>\",\n    \"state\": \"<string>\",\n    \"country\": \"<string>\",\n    \"zipCode\": \"<string>\"\n  },\n  \"isDone\": \"<boolean>\",\n  \"doneDate\": \"<dateTime>\",\n  \"isPaid\": \"<boolean>\",\n  \"paymentDate\": \"<dateTime>\",\n  \"isDelivered\": \"<boolean>\",\n  \"deliveryDate\": \"<dateTime>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/Order/Place",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Order",
														"Place"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Update",
							"item": [
								{
									"name": "/api/Order/Update",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<integer>\",\n  \"productId\": \"<integer>\",\n  \"orderDate\": \"<dateTime>\",\n  \"customerName\": \"<string>\",\n  \"orderType\": 2,\n  \"deliveryAddress\": {\n    \"street\": \"<string>\",\n    \"number\": \"<integer>\",\n    \"city\": \"<string>\",\n    \"state\": \"<string>\",\n    \"country\": \"<string>\",\n    \"zipCode\": \"<string>\"\n  },\n  \"isDone\": \"<boolean>\",\n  \"doneDate\": \"<dateTime>\",\n  \"isPaid\": \"<boolean>\",\n  \"paymentDate\": \"<dateTime>\",\n  \"isDelivered\": \"<boolean>\",\n  \"deliveryDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Order/Update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Order",
												"Update"
											]
										},
										"description": "This endpoint allows you to update an existing order. The request should be sent as an HTTP PUT to {{baseUrl}}/api/Order/Update with a JSON payload in the request body. The payload should include the ID of the order to be updated, the product ID, order date, customer name, order type, delivery address, completion status, payment status, and delivery status.\n\n### Request Body\n\n- `id` (string): The ID of the order to be updated.\n- `productId` (string): The ID of the product associated with the order.\n- `orderDate` (string): The date of the order.\n- `customerName` (string): The name of the customer.\n- `orderType` (integer): The type of the order.\n- `deliveryAddress` (object): An object containing the delivery address details including street, number, city, state, country, and zip code.\n    - `street` (string): The street address for delivery.\n    - `number` (string): The house or building number for delivery.\n    - `city` (string): The city for delivery.\n    - `state` (string): The state or region for delivery.\n    - `country` (string): The country for delivery.\n    - `zipCode` (string): The ZIP or postal code for delivery.\n- `isDone` (string): Indicates if the order is completed.\n- `doneDate` (string): The date when the order was completed.\n- `isPaid` (string): Indicates if the order is paid for.\n- `paymentDate` (string): The date when the order was paid for.\n- `isDelivered` (string): Indicates if the order is delivered.\n- `deliveryDate` (string): The date when the order was delivered."
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"productId\": \"<integer>\",\n  \"orderDate\": \"<dateTime>\",\n  \"customerName\": \"<string>\",\n  \"orderType\": 2,\n  \"deliveryAddress\": {\n    \"street\": \"<string>\",\n    \"number\": \"<integer>\",\n    \"city\": \"<string>\",\n    \"state\": \"<string>\",\n    \"country\": \"<string>\",\n    \"zipCode\": \"<string>\"\n  },\n  \"isDone\": \"<boolean>\",\n  \"doneDate\": \"<dateTime>\",\n  \"isPaid\": \"<boolean>\",\n  \"paymentDate\": \"<dateTime>\",\n  \"isDelivered\": \"<boolean>\",\n  \"deliveryDate\": \"<dateTime>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/Order/Update",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Order",
														"Update"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Delete",
							"item": [
								{
									"name": "/api/Order/Delete",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Order/Delete?id=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Order",
												"Delete"
											],
											"query": [
												{
													"key": "id",
													"value": "<integer>"
												}
											]
										},
										"description": "### Delete Order\n\nThis endpoint is used to delete an order by providing the order ID as a query parameter.\n\n**Request:**\n\n- Method: `DELETE`\n- Endpoint: `{{baseUrl}}/api/Order/Delete`\n- Query Parameters:\n    \n    - `id` (integer): The ID of the order to be deleted."
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Order/Delete?id=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Order",
														"Delete"
													],
													"query": [
														{
															"key": "id",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					],
					"description": "Manages restaurant orders."
				},
				{
					"name": "Product",
					"item": [
						{
							"name": "All",
							"item": [
								{
									"name": "/api/Product/All",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Product/All",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Product",
												"All"
											]
										},
										"description": "This endpoint makes an HTTP GET request to retrieve all products from the API. The response will include a list of products."
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Product/All",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Product",
														"All"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "GetByID",
							"item": [
								{
									"name": "/api/Product/GetByID",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Product/GetByID?id=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Product",
												"GetByID"
											],
											"query": [
												{
													"key": "id",
													"value": "<integer>"
												}
											]
										},
										"description": "\nThis endpoint makes an HTTP GET request to retrieve product information by ID. The request should include the ID of the product as a query parameter in the URL. The response will contain the details of the product with the specified ID, or null if no product is found for the given ID.\n"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Product/GetByID?id=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Product",
														"GetByID"
													],
													"query": [
														{
															"key": "id",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Create",
							"item": [
								{
									"name": "/api/Product/Create",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"price\": \"<double>\",\n  \"stock\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"kitchenArea\": 3\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Product/Create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Product",
												"Create"
											]
										},
										"description": "### Create a New Product\n\nThis endpoint is used to create a new product.\n\n#### Request Body\n\n- `id` (string, required): The unique identifier for the product.\n- `name` (string, required): The name of the product.\n- `price` (string, required): The price of the product.\n- `stock` (string, required): The available stock of the product.\n- `description` (string, required): A description of the product.\n- `kitchenArea` (number, required): The area in the kitchen where the product is located."
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"price\": \"<double>\",\n  \"stock\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"kitchenArea\": 3\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/Product/Create",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Product",
														"Create"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Delete",
							"item": [
								{
									"name": "/api/Product/Delete",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/Product/Delete?id=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Product",
												"Delete"
											],
											"query": [
												{
													"key": "id",
													"value": "<integer>"
												}
											]
										},
										"description": "This endpoint allows you to delete a product by sending an HTTP DELETE request to the specified URL with the product ID as a query parameter.\n\n### Request Parameters\n\n- `id` (integer) - The ID of the product to be deleted."
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/Product/Delete?id=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Product",
														"Delete"
													],
													"query": [
														{
															"key": "id",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Update",
							"item": [
								{
									"name": "/api/Product/Update",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"price\": \"<double>\",\n  \"stock\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"kitchenArea\": 3\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Product/Update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Product",
												"Update"
											]
										},
										"description": "This endpoint allows you to update product information using an HTTP PUT request to {{baseUrl}}/api/Product/Update. The request should include a JSON payload in the raw request body with the following parameters: id, name, price, stock, description, and kitchenArea. The response will provide information about the success or failure of the update operation.\n\nFor example:\n\n- If the update is successful, the response will be null.\n- If there is an error or the update fails, the response will contain relevant error information."
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"price\": \"<double>\",\n  \"stock\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"kitchenArea\": 3\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/Product/Update",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Product",
														"Update"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				}
			],
			"description": "All of the endpoints except for the register and login require bearer token authentication, the token is provided in the login endpoint and it is based on the access level of the user"
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "/"
		}
	]
}